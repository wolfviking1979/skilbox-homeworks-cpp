// Данная программа демонстрирует робота, который ходит по заданному маршруту.
// По указанию оператора двигается по заданному маршруту,
// выводит на экран информацию о маршруте.

#include <iostream>

int main() {
    std::cout << "Задание 3. Красный Марс\n";
    std::cout << "========================\n";

    int positionX = 6;  // координаты начальной позиции робота.
    int positionY = 19;
    int maxX = 15;      // координаты конечной позиции робота.
    int maxY = 20;
    std::string command;    // Введенная команда. Введенная команда может быть W, S, A, D.

    while (true) {
        std::cout << "Марсоход находится на позиции " << positionX << ", " << positionY << std::endl;
        std::cout << "Введите команду:(W, S, A, D):\n";
        std::cin >> command;

        // Проверка на ввод команды. Если введена команда не из списка, то выводится сообщение об ошибке.
        if (command != "W" && command != "S" && command != "A" && command != "D") {
            std::cout << "--------------------------------------------------\n";
            std::cout << "Неизвестная команда!\n";
            std::cout << "--------------------------------------------------\n";
        } else {
            // Проверка на направление маршрута. В зависимости от направления, выполняется действие.
            if (command == "W" && positionY < maxY) {       // направление влево.
                positionY++;
            } else if (command == "S" && positionY > 0) {   // направление вправо.
                positionY--;
            } else if (command == "A" && positionX > 0) {  // направление вверх.
                positionX--;
            } else if (command == "D" && positionX < maxX) {  // направление вниз.
                positionX++;
            } else {
                std::cout << "--------------------------------------------------\n";
                std::cout << "Внимание!\n";
                std::cout << "Марсоход упёрся в стену.\n";
                std::cout << "--------------------------------------------------\n";
            }
        }
    }
}